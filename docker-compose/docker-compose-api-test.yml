# Start ExplorViz based on the current working directory for api testing purposes. This means:
# - The services don't use persistent volumes, all data is lost after the tests finished
# - Services are hidden behind API_GATEWAY, therefore no unnecessary port mapping and production-like conditions
#
# Environment Variables are based on the
# properties file of each service, e.g,
# https://github.com/ExplorViz/explorviz-backend/blob/dev-1/user-service/src/main/resources/explorviz.properties

# !!!!!!!!!!!!!!!!!!!!!!!!
# ATTENTION: DO NOT USE depends_on, since the Gradle Docker Plugin will not 
# remove depending containers.
# !!!!!!!!!!!!!!!!!!!!!!!!

version: "3.3"
services:

  ### ExplorViz Services ###

  user-service:
    build: ../user-service
    container_name: explorviz-backend-user-service
    expose:
      - "8082"
    environment:
      - MONGO_HOST=mongo-user
      - EXCHANGE_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    labels:
      - "traefik.enable=true"
      - "traefik.port=8082"
      - "traefik.http.routers.user-service.rule=PathPrefix(`/v1/tokens`) ||
          PathPrefix(`/v1/users`) || PathPrefix(`/v1/roles`) || PathPrefix(`/v1/userbatch`)"
    networks:
      - explorviz

  settings-service:
    build: ../settings-service
    container_name: explorviz-backend-settings-service
    expose:
      - "8087"
    environment:
      - MONGO_HOST=mongo-settings
      - EXCHANGE_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    labels:
      - "traefik.enable=true"
      - "traefik.port=8087"
      - "traefik.http.routers.settings-service.rule=PathPrefix(`/v1/settings`) || PathPrefix(`/v1/preferences`)"
    networks:
      - explorviz

  landscape-service:
    build: ../landscape-service
    container_name: explorviz-backend-landscape-service
    environment:
      - EXCHANGE_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EXCHANGE_KAFKA_TOPIC_NAME=landscape-update
    expose:
      - "10135"
    ports:
      - "10135:10135"
    networks:
      - explorviz

  broadcast-service:
    build: ../broadcast-service
    container_name: explorviz-backend-broadcast-service
    expose:
      - "8081"
    environment:
      - EXCHANGE_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EXCHANGE_KAFKA_TOPIC_NAME=landscape-update
    labels:
      - "traefik.enable=true"
      - "traefik.port=8081"
      - "traefik.http.routers.broadcast-service.rule=PathPrefix(`/v1/landscapes/broadcast`)"
      - "traefik.http.routers.broadcast-service.priority=200"
    networks:
      - explorviz

  history-service:
    build: ../history-service
    container_name: explorviz-backend-history-service
    expose:
      - "8086"
    environment:
      - MONGO_HOST=mongo-history
      - EXCHANGE_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EXCHANGE_KAFKA_TOPIC_NAME=landscape-update
    labels:
      - "traefik.enable=true"
      - "traefik.port=8086"
      - "traefik.http.routers.history-service.rule=PathPrefix(`/v1/landscapes`) || PathPrefix(`/v1/timestamps`)"
    networks:
      - explorviz

  analysis-service:
    build: ../analysis-service
    container_name: explorviz-backend-analysis-service
    ports:
      - "10133:10133"
    networks:
      - explorviz

  discovery-service:
    build: ../discovery-service
    container_name: explorviz-backend-discovery-service
    expose:
      - "8083"
    ports:
      - "8083:8083"
    labels:
      - "traefik.enable=true"
      - "traefik.port=8083"
      - "traefik.http.routers.discovery-service.rule=PathPrefix(`/v1/agents`)"
    networks:
      - explorviz

  reverse-proxy:
    image: "traefik:v2.0.1"
    container_name: "explorviz-reverse-proxy"
    command:
      - "--entrypoints.web.address=:8090"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      #- "--log.level=DEBUG"
    ports:
      - "8090:8090"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - explorviz

  ### Software Stack ###

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    expose:
      - "2181"
    networks:
      - explorviz

  kafka:
    container_name: explorviz-kafka
    image: wurstmeister/kafka
    expose:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - explorviz

  mongo-user:
    image: mongo
    container_name: explorviz-backend-user-mongo
    command: mongod --port 27017
    expose:
      - "27017"
    networks:
      - explorviz

  mongo-history:
    image: mongo
    container_name: explorviz-backend-landscape-mongo
    command: mongod --port 27018
    expose:
      - "27018"
    networks:
      - explorviz

  mongo-settings:
    image: mongo
    container_name: explorviz-backend-settings-mongo
    command: mongod --port 27019
    expose:
      - "27019"
    networks:
      - explorviz

networks:
  explorviz:
    driver: bridge
