import org.gradle.plugins.ide.eclipse.model.AccessRule

plugins {
	id "application"
	id "com.github.johnrengelman.shadow" version "4.0.4"
	id "com.github.spotbugs" version "1.6.10"
	id "eclipse"
}

// Force new Dependencies 
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
  maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {

  // Teetime Pipe and Filter Framework
  implementation group: 'net.sourceforge.teetime', name: 'teetime', version: '3.0-SNAPSHOT'	
  implementation group: 'net.sourceforge.teetime-stages', name: 'teetime-stages', version: '3.0-SNAPSHOT'

  // BEGIN legacy dependencies
  implementation group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'	

  implementation group: 'org.aspectj', name: 'aspectjtools', version: '1.8.5'
  implementation group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.5'

  implementation group: 'org.apache.activemq', name: 'activemq-broker', version: '5.9.1'
  implementation group: 'org.apache.activemq', name: 'activemq-client', version: '5.9.1'
  
  implementation group: 'com.lmax', name: 'disruptor', version: '3.3.0'
  
  implementation group: 'org.hsqldb', name: 'hsqldb', version: '2.3.1'
  // END legacy dependencies

  // Kieker Monitoring Framework
  implementation group: 'net.kieker-monitoring', name: 'kieker', version: '1.14-SNAPSHOT'
}

// allow com.sun on classpath
eclipse {
    classpath {
        file {
            whenMerged {
                def jre = entries.find { it.path.contains 'org.eclipse.jdt.launching.JRE_CONTAINER' }
                jre.accessRules.add(new AccessRule('0', 'com/sun/**'))
                //jre.accessRules.add(new AccessRule('0', 'sun/**'))
            }
        }
    }
}

assemble.dependsOn shadowJar
jar.enabled = false

jar {
  manifest {
    attributes(
      'Main-Class': 'net.explorviz.analysis.Main'
    )
  }
}

application {
    mainClassName = 'net.explorviz.analysis.Main'
}

shadowJar {
  archiveName = "explorviz-${project.name}.${extension}"
}

spotbugs {
  excludeFilter = file("../conf/spotbugs-exclude-filter.xml")
  reportLevel = "low"
  effort = "max"
  ignoreFailures = true
  toolVersion = '3.1.7'
}

// Per default XML reports for SpotBugs are generated
// Include this to generate HTML reports
tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports {
    // Either HTML or XML reports can be activated
    html.enabled true
    xml.enabled false
  }
}

task spotbugs {
  group 'Quality Assurance'
  description 'Run SpotBugs'
  
  dependsOn 'spotbugsMain'
  dependsOn 'spotbugsTest'
}

artifacts {
  archives shadowJar
}