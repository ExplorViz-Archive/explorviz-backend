plugins {
	id "application"
	id "com.github.johnrengelman.shadow" version "4.0.4"
	id "com.github.spotbugs" version "1.6.10"
}

// Force new Dependencies 
configurations.all {
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
		
	// MongoDB ORM
	implementation 'xyz.morphia.morphia:core:1.4.0'
	
	// Swagger
  	compile group: 'io.swagger.core.v3', name: 'swagger-core', version: '2.0.8'
  	compile group: 'io.swagger.core.v3', name: 'swagger-jaxrs2', version: '2.0.8' 
	
	implementation project(':settings-service:settings-service-model')
	
	// ExplorViz Shared Dependencies
	if(useRemoteSharedProject.toBoolean()) {
    	implementation "com.github.explorviz.explorviz-backend-shared:user:${sharedProjectVersion}"
    	implementation "com.github.explorviz.explorviz-backend-shared:config-injection:${sharedProjectVersion}"
		implementation "com.github.explorviz.explorviz-backend-shared:security:${sharedProjectVersion}"
		implementation "com.github.explorviz.explorviz-backend-shared:exception-handling:${sharedProjectVersion}"
		implementation "com.github.explorviz.explorviz-backend-shared:common-concerns:${sharedProjectVersion}" 
		implementation "com.github.explorviz.explorviz-backend-shared:query:${sharedProjectVersion}"
  	}
  	else {
	    implementation project(':user')
    	implementation project(':config-injection')
    	implementation project(':security')
    	implementation project(':exception-handling')
    	implementation project(':common-concerns')
    	implementation project(':query')
  }
  
  
}

assemble.dependsOn shadowJar
jar.enabled = false

jar {
  manifest {
    attributes(
      'Main-Class': 'net.explorviz.settings.server.main.Main'
    )
  }
}


application {
    mainClassName = 'net.explorviz.settings.server.main.Main'
}

shadowJar {
  archiveName = "explorviz-${project.name}.${extension}"
}

spotbugs {
  excludeFilter = file("../conf/spotbugs-exclude-filter.xml")
  reportLevel = "low"
  effort = "max"
  ignoreFailures = true
  toolVersion = '3.1.7'
}

// Per default XML reports for SpotBugs are generated
// Include this to generate HTML reports
tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports {
    // Either HTML or XML reports can be activated
    html.enabled true
    xml.enabled false
  }
}

task spotbugs {
  group 'Quality Assurance'
  description 'Run SpotBugs'
  
  dependsOn 'spotbugsMain'
  dependsOn 'spotbugsTest'
}

artifacts {
  archives shadowJar
}