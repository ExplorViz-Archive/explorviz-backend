apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

buildscript {
  	repositories {
		jcenter()
  	}
  	dependencies {
    		classpath 'org.akhikhl.gretty:gretty:+'
  	}
}



def loadProperties = {
    def properties = new Properties()
    file('src/main/webapp/WEB-INF/explorviz.properties').withInputStream {
        properties.load(it)
    }
    return properties
}


dependencies {
	compile project(':explorviz-backend-core')
	
	def extensionsFolder = loadProperties().extensionsFolder
	def extensionPrefix = loadProperties().extensionPrefix
	
	// compile each extension
	file(extensionsFolder).eachDir() { dir -> 
	    if (dir.name.startsWith(extensionPrefix)) {
	    		compile project(':' + dir.name)
	    }
	}
}


allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }    
    apply plugin: 'java-library'
}


// Applies to all extensions
subprojects {
    version = '1.0'
    
    dependencies {

		// Jersey and Servlet
		compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version:'2.26'
		compile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.0.1'
		compile group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version:'2.26'


  		// Database, ORM and Serialization
  		compile group: 'com.h2database', name: 'h2', version:'1.4.196'
  		compile group: 'de.ruedigermoeller', name: 'fst', version:'2.47'
  		compile group: 'org.hibernate', name: 'hibernate-core', version:'5.2.11.Final'
  		compile group: 'org.hibernate', name: 'hibernate-c3p0', version:'5.2.11.Final'

		 // JSON + Parsing
	    compile group: 'com.github.jasminb', name: 'jsonapi-converter', version:'0.6'
	    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version:'2.23'
	    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.7.1'
	    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.7.1'
	    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version:'2.7.1'		
	}
}


// Instructions to build .war file
war {
    archiveName 'explorviz-backend.war'
    
    	def extensionsFolder = loadProperties().extensionsFolder
	def extensionPrefix = loadProperties().extensionPrefix    
    
    // Put compiled files of core into war
    from (project(':explorviz-backend-core').sourceSets.main.output.classesDir) {
		into 'WEB-INF/classes' 
	}
    
    
    // Put compiled files of each extensionsFolder into war
	file(extensionsFolder).eachDir() { dir -> 
	    if (dir.name.startsWith(extensionPrefix)) {
	    		from (project(dir.name).sourceSets.main.output.classesDir) {
	    			into 'WEB-INF/classes'
	    		}
    		}
	}
}


// Embedded Webserver
gretty {
	httpPort = loadProperties().httpPort.toInteger()
	servletContainer = loadProperties().servletContainer
	contextPath = loadProperties().contextPath
}