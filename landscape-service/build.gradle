plugins {
	id "application"
	id "org.sonarqube" version "2.7"
	id "com.github.johnrengelman.shadow" version "4.0.4"
	id "com.github.spotbugs" version "1.6.10"
}

// Force new Dependencies 
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
	maven {url 'https://oss.sonatype.org/content/repositories/snapshots'}
	mavenLocal()
}

ext {	
	expSharedVersion = "${rootProject.ext.explorvizSharedVersion}"
}
dependencies {
  // Any .jar in libs
  implementation fileTree(dir: 'libs', include: '*.jar')
  
  // ExplorViz landscape model
  implementation "com.github.explorviz.explorviz-backend-shared:landscape-model:${expSharedVersion}"
  
  //implementation project(':config-injection')
  
  // ExplorViz config matters
  implementation "com.github.explorviz.explorviz-backend-shared:config-injection:${expSharedVersion}"
  
  implementation "com.github.explorviz.explorviz-backend-shared:common-concerns:${expSharedVersion}"
  
  // ExplorViz security matters
  implementation "com.github.explorviz.explorviz-backend-shared:security:${expSharedVersion}"
  
  // ExplorViz exception matters
  implementation "com.github.explorviz.explorviz-backend-shared:exception-handling:${expSharedVersion}"
  
  // SSE context for injection
  implementation group: 'org.glassfish.jersey.media', name: 'jersey-media-sse', version: '2.27'
  
  // Serialization
  implementation group: 'de.ruedigermoeller', name: 'fst', version: '2.56' 
   
  // multipart/form-data type
  implementation group: 'org.glassfish.jersey.media', name:'jersey-media-multipart', version:'2.26'
  
  implementation group: 'redis.clients', name: 'jedis', version: '3.0.1'
  
}

assemble.dependsOn shadowJar
jar.enabled = false

jar {
  manifest {
    attributes(
      'Main-Class': 'net.explorviz.landscape.server.main.Main'
    )
  }
}

application {
    mainClassName = 'net.explorviz.landscape.server.main.Main'
}

shadowJar {
  archiveName = "explorviz-${project.name}.${extension}"
}

// Javadoc settings
javadoc {
  source = sourceSets.main.allJava
  destinationDir = file("./docs/")
  failOnError false
}

spotbugs {
  excludeFilter = file("../conf/spotbugs-exclude-filter.xml")
  reportLevel = "low"
  effort = "max"
  ignoreFailures = true
  toolVersion = '3.1.7'
}

// Per default XML reports for SpotBugs are generated
// Include this to generate HTML reports
tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports {
    // Either HTML or XML reports can be activated
    html.enabled true
    xml.enabled false
  }
}

task spotbugs {
  group 'Quality Assurance'
  description 'Run SpotBugs'
  
  dependsOn 'spotbugsMain'
  dependsOn 'spotbugsTest'
}

// Jitpack publishing
artifacts {
  archives shadowJar
}