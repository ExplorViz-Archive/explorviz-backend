plugins {
	id "java-library"
	id "com.github.spotbugs"
}

// Force new Dependencies 
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {

  if(useRemoteSharedProject.toBoolean()) {
    implementation "com.github.explorviz.explorviz-backend-shared:common-concerns:${sharedProjectVersion}"
  } else {
    implementation project(':common-concerns')
  }
	
	// JSON-API parsing
  	implementation group: 'com.github.jasminb', name: 'jsonapi-converter', version:'0.8' 	
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
}

jar {
	baseName = "explorviz-${project.name}"
}

pmd {
    ruleSets = []
    ruleSetFiles = files("../../conf/pmd.xml")
    ignoreFailures = true
    toolVersion = "6.7.0"
  }
	
  checkstyle {
    configDir = file("../../conf")
    configFile = file("../../conf/checkstyle.xml")
    maxWarnings = 0
    ignoreFailures = true
    toolVersion = "8.12"
  }	

spotbugs {
  excludeFilter = file("../../conf/spotbugs-exclude-filter.xml")
  reportLevel = "low"
  effort = "max"
  ignoreFailures = true
  toolVersion = '3.1.7'
}

// Per default XML reports for SpotBugs are generated
// Include this to generate HTML reports
tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports {
    // Either HTML or XML reports can be activated
    html.enabled true
    xml.enabled false
  }
}

task spotbugs {
  group 'Quality Assurance'
  description 'Run SpotBugs'
  
  dependsOn 'spotbugsMain'
  dependsOn 'spotbugsTest'
}