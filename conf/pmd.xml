<?xml version="1.0"?>
<ruleset name="TeeTime ruleset" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
	<description>This ruleset checks my code for bad stuff</description>
	<exclude-pattern>.*/target/.*</exclude-pattern>
	<!-- warning: if you reference a pmd rulesets xml file more than once, only 
		the first rule is applied; so check for duplicates -->

	<!-- all java rules; on each new pmd release, check whether there were added 
		new rulesets that need to be added here -->
	<rule ref="rulesets/java/android.xml" />
	<rule ref="rulesets/java/basic.xml" />
	<rule ref="rulesets/java/braces.xml" />
	<rule ref="rulesets/java/clone.xml" />
	<rule ref="rulesets/java/codesize.xml" />
	<!-- <rule ref="rulesets/java/comments.xml" /> -->
	<!-- <rule ref="rulesets/java/controversial.xml" /> -->
	<!-- <rule ref="rulesets/java/coupling.xml" /> -->
	<rule ref="rulesets/java/design.xml" />
	<rule ref="rulesets/java/empty.xml" />
	<rule ref="rulesets/java/finalizers.xml" />
	<rule ref="rulesets/java/imports.xml" />
	<!-- <rule ref="rulesets/java/j2ee.xml" /> -->
	<!-- <rule ref="rulesets/java/javabeans.xml" /> -->
	<rule ref="rulesets/java/junit.xml" />
	<rule ref="rulesets/java/logging-jakarta-commons.xml" />
	<rule ref="rulesets/java/logging-java.xml" />

	<rule ref="rulesets/java/migrating.xml" />
	<!-- <rule ref="rulesets/java/naming.xml" /> -->
	<!-- <rule ref="rulesets/java/optimizations.xml" /> -->
	<rule ref="rulesets/java/strictexception.xml" />
	<rule ref="rulesets/java/strings.xml" />
	<rule ref="rulesets/java/sunsecure.xml" />
	<rule ref="rulesets/java/typeresolution.xml" />
	<rule ref="rulesets/java/unnecessary.xml" />
	<rule ref="rulesets/java/unusedcode.xml" />


	<!-- custom adaptations -->

	<rule ref="rulesets/java/empty.xml/EmptyCatchBlock" message="Throw at least an IllegalStateException(e)">
		<priority>1</priority>
	</rule>

	<rule ref="rulesets/java/comments.xml">
		<exclude name="CommentRequired" />
		<exclude name="CommentSize" />
		<exclude name="CommentDefaultAccessModifier" />
	</rule>

	<rule ref="rulesets/java/controversial.xml">
		<exclude name="DataflowAnomalyAnalysis" />
		<exclude name="AtLeastOneConstructor" />
		<exclude name="AvoidUsingVolatile" />
		<exclude name="CallSuperInConstructor" />
		<exclude name="DefaultPackage" />
		<exclude name="UseConcurrentHashMap" />
		<exclude name="OnlyOneReturn" />
	</rule>

	<!-- UR means "undefined reference" which is already detected by the compiler. 
		so we deactivate it. -->
	<!-- <rule ref="rulesets/java/controversial.xml/DataflowAnomalyAnalysis">
		<properties>
			<property name="violationSuppressRegex" value="^Found 'UR'-anomaly.*" />
		</properties>
	</rule> -->

	<rule ref="rulesets/java/coupling.xml">
		<exclude name="LawOfDemeter" />
		<exclude name="LoosePackageCoupling" />
	</rule>

	<rule ref="rulesets/java/j2ee.xml">
		<exclude name="DoNotUseThreads" />
	</rule>

	<rule ref="rulesets/java/javabeans.xml">
		<exclude name="BeanMembersShouldSerialize" />
	</rule>

	<rule ref="rulesets/java/naming.xml">
		<exclude name="ShortVariable" />
		<exclude name="LongVariable" />
		<exclude name="PackageCase" />
		<exclude name="ShortClassName" />
	</rule>

	<rule ref="rulesets/java/naming.xml/VariableNamingConventions">
		<priority>5</priority>
	</rule>

	<rule ref="rulesets/java/optimizations.xml">
		<exclude name="RedundantFieldInitializer" />
		<exclude name="LocalVariableCouldBeFinal" />
		<exclude name="SimplifyStartsWith" />
		<exclude name="AvoidInstantiatingObjectsInLoops" />
	</rule>

	<rule ref="rulesets/java/design.xml">
		<exclude name="UseUtilityClass" />
	</rule>

</ruleset>