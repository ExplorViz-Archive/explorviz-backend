apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.github.spotbugs'

buildscript {
  repositories {
    jcenter()	
      maven {
        url 'https://plugins.gradle.org/m2/'
      }
  }

  dependencies {
    classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
  }
}

repositories {
  maven {
    url 'https://jitpack.io'
  }
}

dependencies {
  implementation project(':shared') 

  // ExplorViz Discovery Classes
  implementation 'com.github.ExplorViz:explorviz-discovery-common:master-SNAPSHOT'
  
  // SSE context for injection
  implementation group: 'org.glassfish.jersey.media', name: 'jersey-media-sse', version: '2.27'  
}

assemble.dependsOn shadowJar

war {
  archiveName = "explorviz-${project.name}.${extension}"
}

jar {
  manifest {
    attributes(
      'Main-Class': 'net.explorviz.discovery.server.main.Main'
    )
  }
}

shadowJar {
  archiveName = "explorviz-${project.name}.${extension}"
}

spotbugs {
  excludeFilter = file("../conf/spotbugs-exclude-filter.xml")
  reportLevel = "low"
  effort = "max"
  ignoreFailures = true
  toolVersion = '3.1.7'
}

// Per default XML reports for SpotBugs are generated
// Include this to generate HTML reports
tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports {
    // Either HTML or XML reports can be activated
    html.enabled true
    xml.enabled false
  }
}

task spotbugs {
  group 'Quality Assurance'
  description 'Run SpotBugs'
  
  dependsOn 'spotbugsMain'
  dependsOn 'spotbugsTest'
}